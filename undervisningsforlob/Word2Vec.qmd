---
title: "Word2Vec"
description-meta: "En øvelse i at lave og forstå beregninger i Word2Vec.'
image: "../materialer/sprogmodeller/images/word2vec_simple.png"
categories:
  - A-niveau
  - Kort
---

::: {.callout-caution collapse="true" appearance="minimal"}
### Forudsætninger og tidsforbrug

+ Word2Vec teori.

Forudsætningerne bør dækkes ved hjælp af [noten om Word2Vec](../materialer/sprogmodeller/word2vec.qmd){target="_blank"}.

**Tidsforbrug:** Ca. 90 minutter.

:::

::: {.purpose}

### Formål

Formålet med dette forløb er dels at gennemføre beregningerne i Word2vec for et meget lille korpus af data, men også at forstå, hvad det vil sige at optimere vektorerne, så tabsfunktionen minimeres.

:::

## Et meget lille tekstkorpus

Vi vi anvende følgende meget simple tekstkorpus med 12 sætninger, hvor hver sætning kun består af to ord.
Hunden sover.
Katten sover.
Katten spinder.
Hunden gør
Hunden sover
Hunden gør.
Katten sover.
Hunden gør.
Katten sover.
Katten spinder.
Katten sover.
Katten spinder.




## Første opdatering af vægtene

Du skal nu gå gennem de enkelte beregninger, som skal til for at opdatere vægtene. Der er efterfølgende facit til hver del.

::: {.callout-note collapse="false" appearance="minimal"}
### Opgave 1: Beregn værdien af tabsfunktionen
* Udregn først 

   $$s^{(1)} = w_0 + w_1 \cdot x_1^{(1)} + w_2 \cdot x_2^{(1)}$$ 

   for det første træningseksempel.

* Udregn så 

   $$o^{(1)} = \sigma (s^{(1)})$$

* Udregn derefter 

   $$\mathrm{e}^{(1)} = (t^{(1)} - o^{(1)})^2,$$ 

   hvilket giver det første træningseksempels bidrag til tabsfunktionen.

* Gentag for hver af de to øvrige træningseksempler.

* Læg de 3 beregnede værdier sammen og divider med 2, så 

  $$E=\frac{1}{2} \cdot (\mathrm{e}^{(1)}+\mathrm{e}^{(2)}+\mathrm{e}^{(3)}).$$

:::


::: {.callout-note collapse="false" appearance="minimal"}
### Opgave 2: Beregn de partielle afledede

* Beregn $$\frac{\partial E}{\partial w_0} = - \sum_{m=1}^{3} \left (t^{(m)}-o^{(m)} \right) \cdot o^{(m)}\cdot (1-o^{(m)}) \cdot 1$$
* Beregn $$\frac{\partial E}{\partial w_1} = - \sum_{m=1}^{3} \left (t^{(m)}-o^{(m)} \right) \cdot o^{(m)}\cdot (1-o^{(m)}) \cdot x_1^{(m)}$$
* Beregn $$\frac{\partial E}{\partial w_2} = - \sum_{m=1}^{3} \left (t^{(m)}-o^{(m)} \right) \cdot o^{(m)}\cdot (1-o^{(m)}) \cdot x_2^{(m)}$$

:::


::: {.callout-note collapse="false" appearance="minimal"}
### Opgave 3: Opdatér vægtene

Beregn de opdaterede vægte
$$
\begin{aligned}
w_0^{(\textrm{ny})} \leftarrow & w_0 - \eta \cdot \frac{\partial E}{\partial w_0}   \\
\\
w_1^{(\textrm{ny})} \leftarrow & w_1 - \eta \cdot \frac{\partial E}{\partial w_1}  \\
\\
w_2^{(\textrm{ny})} \leftarrow & w_2 - \eta \cdot \frac{\partial E}{\partial w_2} 
\end{aligned}
$$

:::


## Anden opdatering af vægtene
Overvej, om du kan strømline dine beregninger, for eksempel i Excel eller i dit CAS værktøj, så det bliver hurtigere at opdatere vægtene en gang mere på samme måde.

::: {.callout-note collapse="false" appearance="minimal"}
### Opgave 4: Opdater vægtene anden gang

* Beregn tabsfunktionen.
* Beregn de opdaterede vægte.

:::

Bemærk, at værdien af tabsfunktionen er blevet lidt mindre. Formålet er jo netop at minimere den gennem gradientnedstigning, så som regel bør værdien bliver mindre, hver gang vægtene opdateres.


## App til simple neurale netværk
Med [perceptron app'en](../apps/perceptron_app.qmd){target="_blank"} kan du lave de samme beregninger bare automatisk.

::: {.callout-note collapse="false" appearance="minimal"}
### Opgave 5: Afprøv perceptron app'en

* Lav et Excelark med feature- og targetværdierne.
* Indlæs data fra Excelarket i perceptron app'en.
* Vælg de korrekte værdier i felterne på app'en. Herunder skal feature-skalering være slået fra.
* Se om app'en giver samme resultater for tabsfunktionen og vægtene, som du selv fik efter 1 iteration og efter 2 iterationer.

:::

## Cross-entropy som tabsfunktion
Du kan læse om *cross-entropy* i [noten om tabsfunktioner](../materialer/tabsfunktioner/tabsfunktioner.qmd#cross-entropy){target="_blank"}.

::: {.callout-note collapse="false" appearance="minimal"}
### (Ekstra) Opgave 6: Cross-entropy tabsfunktion 
* Gentag opgave 1-5 men med *cross-entropy* som tabsfunktion i stedet for *squared error*.

:::


## Løsninger til opgaver
[Facitliste](Opdatering_af_vægte_i_en_kunstig_neuron_løsninger.qmd){target="_blank"}.

